generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OauthProvider {
  GOOGLE
}

enum ShareableFileType {
  HTML
  PDF
  ZIP
  IMAGE
}

enum Status {
  ACTIVE
  DELETED
  INACTIVE
}

model User {
  id    Int       @id @default(autoincrement())
  name  String
  email String    @unique
  data  Json      @default("{}")
  oauthProvider OauthProvider

  plan  UserPlan?
  shareables Shareable[]

  status     Status @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserPlan {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])

  plan   Plan @relation(fields: [planId], references: [id])
  planId Int  @unique

  data Json @default("{}")
  status Status @default(ACTIVE)
}

model Plan {
  id        Int        @id @default(autoincrement())
  name      String
  price     Float
  data      Json       @default("{}")
  userPlans UserPlan[]
}

model Shareable {
  id        Int      @id @default(autoincrement())
  bucketLink String
  fileType  ShareableFileType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  userId Int

  data Json @default("{}")
  status Status @default(ACTIVE)
}

model Domain {
  id        Int      @id @default(autoincrement())
  
  domainName String
  subDomain String

  data Json @default("{}")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  status Status @default(ACTIVE)
}